import streamlit as st
from luno_get_balance import LunoGetBalance
from luno_get_fee_info import LunoGetFeeInfo
from luno_get_order_book import LunoGetOrderBook
from luno_get_transactions import LunoGetTransactions
from ollama_functions import OllamaFunctions
import pandas as pd

# List of account IDs
account_ids = [
    "86407348185805061",
    "687412742627896300",
    "3784206532036387289",
    "8772730523187070049",
    "4754107407400490211",
    "3663503223668122216",
    "3731946183750833758",
    "4715269767296112715",
    "4044512054462273666",
    "7604837217064805551",
]

# List of assets
assets_list = [
    "ALL",
    "BCH",
    "XBT",
    "ETH",
    "LINK",
    "LTC",
    "UNI",
    "USDC",
    "XRP",
    "ZAR",
]

# Streamlit app UI
st.title("Trading App")

assets = st.selectbox("Select Asset for Balance", assets_list)

if st.button("Get Balance"):
    # If "ALL" is selected, pass an empty string to get all balances
    if assets == "ALL":
        balance_list = LunoGetBalance().get_balance("")
    else:
        balance_list = LunoGetBalance().get_balance(assets)
    
    # Display the balance
    if balance_list:
        st.write("Balance List:")
        # Display using pandas
        
        balance_df = pd.DataFrame(balance_list)
        st.dataframe(balance_df)
        #st.json(balance_list)
    else:
        st.write("No balance information available.")

# Button for getting fee info
st.button("Get Fee Info", on_click=LunoGetFeeInfo().get_fee_info)

# Select account ID using a dropdown
id = st.selectbox("Select Account ID", account_ids)

# Use lambda function to pass 'id' as argument to 'get_transactions'
st.button(f"Get Transactions for {id}", on_click=LunoGetTransactions().get_transactions)

# Button for getting order book
st.button("Get Order Book", on_click=LunoGetOrderBook().get_order_book)

# Text input for prompt
prompt = st.text_input("Enter a prompt:")

# Button to generate text based on prompt
if st.button("Generate Text"):
    ollama_functions = OllamaFunctions()
    generated_text = ollama_functions.generate_text(prompt)
    st.write(generated_text)
